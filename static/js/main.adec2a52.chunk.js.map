{"version":3,"sources":["registerServiceWorker.js","components/Header.js","components/Main.js","pages/Post.js","containers/PostContent.js","util/Subject.js","content/Post1.js","content/Post2.js","content/Post3.js","content/Post4.js","util/Posts.js","containers/ListBlog.js","components/SlugGenerator.js","containers/Sidebar.js","pages/Home.js","pages/NotFound.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","useStyles","makeStyles","theme","toolbar","borderBottom","palette","divider","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","padding","spacing","flexShrink","mailIcon","color","githubIcon","linkedInIcon","Header","title","classes","history","useHistory","Toolbar","className","Typography","component","variant","noWrap","style","marginRight","href","target","rel","IconButton","Mail","LinkedIn","Button","size","onClick","push","root","flexGrow","content","Main","children","postedDate","marginBottom","Post","publishDate","Container","maxWidth","Grid","container","item","md","fontWeight","PostContent","align","paragraph","this","props","React","Component","HREF","url","name","Subject","GoogleDrive","Dropbox","Laravel","Github","GithubPages","GithubPagesHelp","Git","Jekyll","ReactJS","LetsEncrypt","Post1","defaultProps","Post2","src","alt","Post3","Post4","Posts","slug","ListBlog","List","ListItem","ListItemText","marginLeft","primary","to","secondary","publish","SlugGenerator","handleChangeInput","event","setState","value","handleGenerateSlug","slugify","sentence","lower","handleKeyPress","keyCode","id","bind","npmSlug","TextField","label","textField","margin","onChange","onKeyDown","button","marginTop","withStyles","mixins","gutters","paddingTop","paddingBottom","Sidebar","Home","xs","map","key","NotFound","App","basename","process","exact","path","post","Content","render","ReactDOM","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.adec2a52.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Toolbar, Typography, Button, IconButton } from \"@material-ui/core\";\nimport {\n\tGitHub as GithubIcon,\n\tLinkedIn as LinkedInIcon,\n\tMail as MailIcon\n} from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n\ttoolbar: {\n\t\tborderBottom: `1px solid ${theme.palette.divider}`\n\t},\n\ttoolbarTitle: {\n\t\tflex: 1\n\t},\n\ttoolbarSecondary: {\n\t\tjustifyContent: \"space-between\",\n\t\toverflowX: \"auto\"\n\t},\n\ttoolbarLink: {\n\t\tpadding: theme.spacing(1),\n\t\tflexShrink: 0\n\t},\n\tmailIcon: {\n\t\tcolor: \"#7f7f7f\"\n\t},\n\tgithubIcon: {\n\t\tcolor: \"black\"\n\t},\n\tlinkedInIcon: {\n\t\tcolor: \"#207bb4\"\n\t}\n}));\n\nconst Header = ({ title = \"Personal Blog\", ...props }) => {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst BackToHome = () => history.push(\"/home\");\n\n\treturn (\n\t\t<>\n\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t<Typography\n\t\t\t\t\tcomponent=\"h2\"\n\t\t\t\t\tvariant=\"h5\"\n\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\tnoWrap\n\t\t\t\t\tclassName={classes.toolbarTitle}>\n\t\t\t\t\t{title}\n\t\t\t\t</Typography>\n\t\t\t\t<div style={{ marginRight: 20 }}>\n\t\t\t\t\t<a href=\"mailto:khanis.anthony@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\" >\n\t\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t\t<MailIcon className={classes.mailIcon} />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://id.linkedin.com/in/khanis-anthony-kurniawan-736014160\"\n\t\t\t\t\t\ttarget=\"_blank\" rel=\"noopener noreferrer\" >\n\t\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t\t<LinkedInIcon className={classes.linkedInIcon} />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href=\"https://github.com/khanisak\" target=\"_blank\" rel=\"noopener noreferrer\" >\n\t\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t\t<GithubIcon className={classes.githubIcon} />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t<Button variant=\"outlined\" size=\"small\" onClick={BackToHome}>\n\t\t\t\t\tBack to Home\n\t\t\t\t</Button>\n\t\t\t</Toolbar>\n\t\t</>\n\t);\n};\n\nexport default Header;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tflexGrow: 1\n\t},\n\tcontent: {\n\t\tflexGrow: 1,\n\t\t// backgroundColor: theme.palette.background.default,\n\t\tpadding: theme.spacing(3)\n\t}\n}));\n\nconst Main = ({ children, ...props }) => {\n\tconst classes = useStyles();\n\treturn <main className={classes.content}>{children}</main>;\n};\n\nexport default Main;\n","import React from \"react\";\nimport { Container, Grid, Typography, makeStyles } from \"@material-ui/core\";\nimport Header from \"../components/Header\";\nimport Main from \"../components/Main\";\n\nconst useStyles = makeStyles(theme => ({\n\tpostedDate: {\n\t\tmarginBottom: 30\n\t}\n}));\n\nconst Post = ({ title, content, publishDate, ...props }) => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Container maxWidth=\"lg\">\n\t\t\t<Header title={title} />\n\t\t\t<Main>\n\t\t\t\t<Grid container>\n\t\t\t\t\t<Grid item md={12} className={classes.postedDate}>\n\t\t\t\t\t\t<Typography variant=\"caption\">\n\t\t\t\t\t\t\tDiposting{\" \"}\n\t\t\t\t\t\t\t<span style={{ fontWeight: 500 }}>\n\t\t\t\t\t\t\t\t{publishDate}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>{content}</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Main>\n\t\t</Container>\n\t);\n};\n\nexport default Post;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass PostContent extends React.Component {\n    render() {\n        return (\n            <Typography align='left' paragraph variant=\"body1\">\n                {this.props.children}\n            </Typography>\n        );\n    }\n}\n\nexport default PostContent;","import React from \"react\";\n\nconst HREF = ({ url, name }) => (\n\t<a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t{name}\n\t</a>\n);\nconst Subject = {\n\tGoogleDrive: () => <HREF url=\"https://www.google.com/intl/in/drive/\" name=\"GoogleDrive\" />,\n\tDropbox: () => <HREF url=\"https://www.dropbox.com/\" name=\"Dropbox\" />,\n\tLaravel: () => <HREF url=\"https://laravel.com/\" name=\"Laravel\" />,\n\tGithub: () => <HREF url=\"https://github.com/\" name=\"Github\" />,\n\tGithubPages: () => <HREF url=\"https://pages.github.com/\" name=\"Github Pages\" />,\n\tGithubPagesHelp: () => <HREF url=\"https://help.github.com/articles/what-is-github-pages/\" name=\"sini\" />,\n\tGit: () => <HREF url=\"https://git-scm.com/\" name=\"Git\" />,\n\tJekyll: () => <HREF url =\"https://jekyllrb.com/\" name=\"Jekyll\" />,\n\tReactJS: () => <HREF url=\"https://reactjs.org/\" name=\"React JS\" />,\n\tLetsEncrypt: () => <HREF url=\"https://letsencrypt.org/\" name=\"Let's Encrypt\" />,\n};\n\nexport default Subject;\n","import React from \"react\";\nimport PostContent from \"../containers/PostContent\";\nimport Subject from \"../util/Subject\";\n\nconst Post1 = () => {\n\tconst { Laravel, Git } = Subject;\n\treturn (\n\t\t<>\n\t\t\t<PostContent>\n\t\t\t\t<Laravel /> adalah sebuah\n\t\t\t\t<i> open source framework</i> PHP yang cukup populer untuk para\n\t\t\t\tdeveloper <i>website</i>. Sedangkan <Git /> sendiri adalah\n\t\t\t\tsebuah\n\t\t\t\t<i> platform version control system</i> yang banyak digunakan\n\t\t\t\toleh developer untuk mengerjakan atau mengembangkan sebuah\n\t\t\t\tprojek bersama-sama.\n\t\t\t</PostContent>\n\t\t\t<PostContent>\n\t\t\t\tPada saat anda melakukan <i>Git Clone</i> pada repository yang\n\t\t\t\tberisi projek laravel, dan meletakkannya pada web server anda\n\t\t\t\t(Contoh: <i>localhost/myproject</i>, anda akan menemukan bahwa\n\t\t\t\twebsite tersebut tidak dapat dijalankan. Web server akan\n\t\t\t\tmengembalikan error <i>500 Internal Server Error</i>\n\t\t\t</PostContent>\n\t\t\t<PostContent>\n\t\t\t\tBerikut langkah langkah yang harus anda lakukan untuk dapat\n\t\t\t\tmenjalankan project laravel pada saat pertama kali melakukan{\" \"}\n\t\t\t\t<i>Git Clone</i>,\n\t\t\t\t<ol>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<i>Clone</i> Projek anda\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tPada OS Windows buka{\" \"}\n\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\t<b>cmd</b>\n\t\t\t\t\t\t</i>\n\t\t\t\t\t\t, pada MacOS / Linux buka{\" \"}\n\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\t<b>terminal</b>\n\t\t\t\t\t\t</i>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tPada cmd / terminal, pindah ke folder aplikasi website\n\t\t\t\t\t\tyang sudah di clone\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tPada cmd / terminal, jalankan perintah{\" \"}\n\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\t<b>\"composer install\"</b>\n\t\t\t\t\t\t</i>\n\t\t\t\t\t\t. Tunggu sampai selesai.\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tCopy file{\" \"}\n\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t<i>.env.example</i>\n\t\t\t\t\t\t</b>{\" \"}\n\t\t\t\t\t\tdan beri nama baru{\" \"}\n\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t<i>.env</i>\n\t\t\t\t\t\t</b>{\" \"}\n\t\t\t\t\t\tpada folder aplikasi anda\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tBuka file{\" \"}\n\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t<i>.env</i>\n\t\t\t\t\t\t</b>{\" \"}\n\t\t\t\t\t\tmenggunakan editor yang anda sukai, lalu ubah field{\" \"}\n\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t<i>DB_DATABASE</i>\n\t\t\t\t\t\t</b>\n\t\t\t\t\t\t,{\" \"}\n\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t<i>DB_USERNAME</i>\n\t\t\t\t\t\t</b>{\" \"}\n\t\t\t\t\t\tdan{\" \"}\n\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t<i>DB_PASSWORD</i>\n\t\t\t\t\t\t</b>{\" \"}\n\t\t\t\t\t\tsesuai setting database yang anda punya\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tKembali ke cmd / terminal, jalankan perintah berikut di{\" \"}\n\t\t\t\t\t\t<i>root</i> folder aplikasi website anda,\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t<i>php artisan key:generate</i>\n\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t<i>php artisan key:migrate</i>\n\t\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tJika tidak ada error, buka browser dan coba akses\n\t\t\t\t\t\tkembali website anda.\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t</PostContent>\n\t\t</>\n\t);\n};\n\nPost1.defaultProps = {\n\tpublishDate: \"default\"\n};\n\nexport default Post1;\n","import React from \"react\";\nimport PostContent from \"../containers/PostContent\";\nimport Subject from \"../util/Subject\";\n\nclass Post2 extends React.Component {\n\trender() {\n\t\tconst {\n\t\t\tGithub,\n\t\t\tGithubPages,\n\t\t\tGithubPagesHelp,\n\t\t\tLetsEncrypt,\n\t\t\tJekyll,\n\t\t\tReactJS\n\t\t} = Subject;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<PostContent>\n\t\t\t\t\tGithub adalah salah satu dari sekian banyak layanan hosting\n\t\t\t\t\tGit untuk mengembangkan perangkat lunak bersama sama.{\" \"}\n\t\t\t\t\t{<Github />} menjadi tempat hosting favorit bagi para developer\n\t\t\t\t\tyang mengembangkan <i>code</i> berbasis{\" \"}\n\t\t\t\t\t<i>community / open source</i>.\n\t\t\t\t</PostContent>\n\t\t\t\t<PostContent>\n\t\t\t\t\tSelain sebagai tempat hosting layanan Git, terkadang profil{\" \"}\n\t\t\t\t\t{<Github />} seorang developer dapat dijadikan sebuah nilai\n\t\t\t\t\ttambah pada saat melamar pekerjaan.\n\t\t\t\t</PostContent>\n\t\t\t\t<PostContent>\n\t\t\t\t\tNah kali ini saya akan berbagi mengenai salah satu fitur{\" \"}\n\t\t\t\t\t{<Github />} yaitu {<GithubPages />}. {<GithubPages />} adalah salah\n\t\t\t\t\tsatu fitur {<Github />} yang memperbolehkan kita untuk mem-\n\t\t\t\t\t<i>publish repository</i> kita menjadi sebuah <i>website</i>\n\t\t\t\t\t. Ya benar, Layanan hosting maksud nya teman-teman ! :){\" \"}\n\t\t\t\t\t<br />\n\t\t\t\t\tPada saat artikel ini ditulis, layanan hosting ini dapat\n\t\t\t\t\tkita nikmati secara gratis untuk <i>\n\t\t\t\t\t\tPublic Repository\n\t\t\t\t\t</i>{\" \"}\n\t\t\t\t\tdan berbayar untuk <i>Private Repository</i> dan beberapa\n\t\t\t\t\tlimitasi serta aturan penggunaan yang dapat dilihat di{\" \"}\n\t\t\t\t\t{<GithubPagesHelp />}.\n\t\t\t\t</PostContent>\n\t\t\t\t<PostContent>\n\t\t\t\t\t<i>\n\t\t\t\t\t\t<b>Yang perlu diperhatikan</b>\n\t\t\t\t\t</i>{\" \"}\n\t\t\t\t\tadalah {<GithubPages />} hanya memperbolehkan kita untuk\n\t\t\t\t\t<i>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\thosting <b>Static Website</b>\n\t\t\t\t\t</i>\n\t\t\t\t\t. Itu berarti semua website anda yang mengandung{\" \"}\n\t\t\t\t\t<i>server side scripting</i> seperti{\" \"}\n\t\t\t\t\t<i>PHP, Java, Node.js</i> tidak dapat dijalankan di{\" \"}\n\t\t\t\t\t{<GithubPages />}. Tetapi <i>frontend framework</i> seperti{\" \"}\n\t\t\t\t\t<i>React.js, Angular.js</i> dapat kita hosting di{\" \"}\n\t\t\t\t\t{<GithubPages />}.\n\t\t\t\t</PostContent>\n\t\t\t\t<PostContent>\n\t\t\t\t\tBerikut langkah langkah yang harus anda lakukan untuk mem-\n\t\t\t\t\t<i>publish repository</i> anda,\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<i>Login</i> ke {<Github />}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>Buat repository sesuai keinginan anda</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<i>Git Push content website</i> ke repository yang\n\t\t\t\t\t\t\tanda buat\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tMasuk ke <i>repository</i> yang anda buat dan pergi\n\t\t\t\t\t\t\tke halaman <i>setting</i> sesuai gambar di bawah{\" \"}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tstyle={{ maxWidth: \"100%\" }}\n\t\t\t\t\t\t\t\tsrc=\"https://www.dropbox.com/s/0hp2w6a12mtd5vt/Setting%20Github.png?raw=1\"\n\t\t\t\t\t\t\t\talt=\"setting github\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tScroll ke bawah, pada <i>section</i> Github Pages,\n\t\t\t\t\t\t\tpilih <i>source / branch</i> yang akan dijadikan\n\t\t\t\t\t\t\tcontent website, umumnya nama branch yang digunakan\n\t\t\t\t\t\t\tadalah <i>gh-pages branch</i>. Lihat gambar di\n\t\t\t\t\t\t\tbawah. <br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tstyle={{ maxWidth: \"100%\" }}\n\t\t\t\t\t\t\t\tsrc=\"https://www.dropbox.com/s/cz7vbap9iope1u7/Github%20Pages%20Published.png?raw=1\"\n\t\t\t\t\t\t\t\talt=\"github pages published\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tSelesai, akses website anda dengan alamat{\" \"}\n\t\t\t\t\t\t\t<i>https://username.github.io/repository-name</i>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ol>\n\t\t\t\t</PostContent>\n\t\t\t\t<PostContent>\n\t\t\t\t\tKalau anda jeli, ada pilihan <i>Custom Domain</i> pada\n\t\t\t\t\tgambar diatas. Ya, {<GithubPages />} memperbolehkan kita untuk\n\t\t\t\t\tmenggunakan domain / subdomain kita sendiri. Cukup masukkan\n\t\t\t\t\tdomain / subdomain yang ingin digunakan lalu tekan tombol{\" \"}\n\t\t\t\t\t<i>Save</i>. <br />\n\t\t\t\t\tSetelah itu yang harus anda lakukan adalah mengatur{\" \"}\n\t\t\t\t\t<i>DNS Record Domain</i> anda agar mengarah ke halaman\n\t\t\t\t\tGithubPages. Lalu akses kembali website anda dengan Custom\n\t\t\t\t\tDomain anda ! :) Oh ya, kalau sudah setting pakai custom\n\t\t\t\t\tdomain, domain default dari github yang{\" \"}\n\t\t\t\t\t<i>https://username.github.io/repository-name</i> akan tidak\n\t\t\t\t\tbisa diakses lagi.\n\t\t\t\t</PostContent>\n\t\t\t\t<PostContent>\n\t\t\t\t\tSekali lagi, kalau anda jeli. Ada pilihan{\" \"}\n\t\t\t\t\t<i>Enforce https</i> ! Itu artinya bahwa GithubPages\n\t\t\t\t\totomatis menyediakan sertifikat ssl untuk website anda !\n\t\t\t\t\tMenarik sekali kan? GithubPages bekerjasama dengan{\" \"}\n\t\t\t\t\t{<LetsEncrypt />} untuk menyediakan sertifikat ssl kita secara\n\t\t\t\t\tgratis guys.! <br />\n\t\t\t\t\tIngat bahwa setelah anda melakukan setting domain,\n\t\t\t\t\tsertifikat ssl tidak serta merta akan langsung muncul pada\n\t\t\t\t\tsaat anda mengakses custom domain anda. Sertifikat akan di\n\t\t\t\t\tissued dalam waktu 1x24 jam sesuai ketentuan dari{\" \"}\n\t\t\t\t\t{<GithubPages />}. <br />\n\t\t\t\t\tPastikan bahwa saat setelah anda menyimpan custom domain\n\t\t\t\t\tanda, maka muncul notifikasi bahwa sertifikat ssl anda\n\t\t\t\t\tsedang proses issued, jika tidak, hapus custom domain anda,\n\t\t\t\t\tlalu simpan kembali custom domain anda untuk memancing\n\t\t\t\t\tproses issued https nya. <br />\n\t\t\t\t\tKarena kemarin pengalaman saya saat saya save custom domain,\n\t\t\t\t\tnotifikasi nya tidak berubah menjadi issued https,\n\t\t\t\t\tsepertinya memang masih bug karena untuk sistem https di\n\t\t\t\t\tcustom domain {<GithubPages />} sendiri baru saja diberlakukan\n\t\t\t\t\tper 1 Mei 2018.\n\t\t\t\t</PostContent>\n\t\t\t\t<PostContent>\n\t\t\t\t\tSatu hal terakhir yang perlu disampaikan, bahwa{\" \"}\n\t\t\t\t\t{<GithubPages />} bekerjasama juga dengan{\" \"}\n\t\t\t\t\t<i>framework {<Jekyll />}</i> untuk menyediakan platform\n\t\t\t\t\tblogging bagi penggunanya. <br />\n\t\t\t\t\tSaya sendiri belum sempat untuk utak atik {<Jekyll />} karena\n\t\t\t\t\tmemang belum tertarik menggunakannya.\n\t\t\t\t</PostContent>\n\t\t\t\t<PostContent>\n\t\t\t\t\tWebsite ini sendiri saya hosting di {<GithubPages />} dan\n\t\t\t\t\tmenggunakan <i>framework {<ReactJS />}</i>. Kenapa saya\n\t\t\t\t\tmenggunakan {<ReactJS />}? Mungkin akan saya bahas di kesempatan\n\t\t\t\t\tselanjutnya (hehe). Terima kasih.\n\t\t\t\t</PostContent>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nPost2.defaultProps = {\n\tpublishDate: \"default\"\n};\n\nexport default Post2;\n","import React from \"react\";\nimport PostContent from \"../containers/PostContent\";\nimport Subject from \"../util/Subject\";\n\nconst Post3 = ({ title, publishDate, ...props }) => {\n\tconst { Dropbox, GoogleDrive } = Subject;\n\treturn (\n\t\t<>\n\t\t\t<PostContent>\n\t\t\t\t{<Dropbox />} merupakan salah satu alternatif dari {<GoogleDrive />}.\n\t\t\t\tKita bisa <i>upload</i> sebuah gambar ke {<Dropbox />} lalu\n\t\t\t\tmenggunakannya di website lain. Ikuti cara berikut,\n\t\t\t\t<ol>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<i>Login</i> ke akun {<Dropbox />}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<i>Upload</i> sebuah gambar apa saja\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tBuka gambar tersebut di {<Dropbox />}. Lalu klik tombol{\" \"}\n\t\t\t\t\t\t<b>\"Bagikan\"</b> yang ada di pojok kanan atas\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tSetelah itu anda tinggal mengklik tombol{\" \"}\n\t\t\t\t\t\t<b>\"Buat Tautan\"</b>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAnda akan mendapatkan url dengan format kira kira\n\t\t\t\t\t\tsebagai berikut{\" \"}\n\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\thttps://www.dropbox.com/s/gv3svo2k3gvpx3x/Bagikan.png?dl=0\n\t\t\t\t\t\t</i>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tNah, url itu tidak bisa langsung kita gunakan, ubah\n\t\t\t\t\t\tparameter{\" \"}\n\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t<i>dl=0</i>\n\t\t\t\t\t\t</b>{\" \"}\n\t\t\t\t\t\tmenjadi{\" \"}\n\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t<i>raw=1</i>\n\t\t\t\t\t\t</b>{\" \"}\n\t\t\t\t\t\tsehingga kira kira menjadi seperti ini\n\t\t\t\t\t\thttps://www.dropbox.com/s/gv3svo2k3gvpx3x/Bagikan.png?raw=1\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tLalu silahkan gunakan url itu untuk menampilkan gambar\n\t\t\t\t\t\tseperti di bawah :) <br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tstyle={{ maxWidth: \"100%\" }}\n\t\t\t\t\t\t\tsrc=\"https://www.dropbox.com/s/ovvdnngyuzh96bh/Kucing%20Lucu.jpg?raw=1\"\n\t\t\t\t\t\t\talt=\"Kucing Idaman\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t</PostContent>\n\t\t</>\n\t);\n};\n\nexport default Post3;\n","import React from \"react\";\nimport PostContent from \"../containers/PostContent\";\n\nclass Post4 extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<PostContent>\n\t\t\t\t\tBerikut langkah yang harus anda lakukan untuk menginstall\n\t\t\t\t\tpgAdmin4 di Ubuntu 16.04\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tInstall required package dengan command berikut{\" \"}\n\t\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\t\tapt-get install virtualenv python-pip libpq-dev\n\t\t\t\t\t\t\t\tpython-dev\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tBuat folder baru dengan command berikut{\" \"}\n\t\t\t\t\t\t\t<i>mkdir ~/Virtualenv</i>.\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>cd ~/Virtualenv</li>\n\t\t\t\t\t\t<li>virtualenv pgadmin4-x.x</li>\n\t\t\t\t\t\t<li>cd pgadmin4-x.x</li>\n\t\t\t\t\t\t<li>source bin/activate</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tDownload pgAdmin source <b>.whl</b> di halaman\n\t\t\t\t\t\t\tberikut{\" \"}\n\t\t\t\t\t\t\t<a href=\"https://www.pgadmin.org/download/pgadmin-4-python-wheel/\">\n\t\t\t\t\t\t\t\thttps://www.pgadmin.org/download/pgadmin-4-python-wheel/\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tMasukkan file yang sudah di download tadi ke dalam\n\t\t\t\t\t\t\tfolder <b>~/Virtualenv/pgadmin4-x.x</b>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tJalankan command{\" \"}\n\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\tpip install \"\n\t\t\t\t\t\t\t\t<i>file yang sudah anda download tadi.</i>\"\n\t\t\t\t\t\t\t</b>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ol>\n\t\t\t\t</PostContent>\n\n\t\t\t\t<PostContent>\n\t\t\t\t\tJika proses instalasi sudah selesai, pgAdmin dapat\n\t\t\t\t\tdijalankan dengan command berikut,\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tpython\n\t\t\t\t\t\t\t~/Virtualenv/pgadmin4-x.x/lib/python2.7/site-packages/pgadmin4/pgAdmin4.py\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tAkses pgAdmin4 di <b>localhost:5050</b>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ol>\n\t\t\t\t</PostContent>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nPost4.defaultProps = {\n\tpublishDate: \"default\"\n};\n\nexport default Post4;\n","import React from \"react\";\nimport Post1 from \"../content/Post1\";\nimport Post2 from \"../content/Post2\";\nimport Post3 from \"../content/Post3\";\nimport Post4 from \"../content/Post4\";\n\nexport const Posts = [\n\t{\n\t\ttitle: \"Ubuntu 16.04 install pgAdmin4\",\n\t\tpublishDate: \"March 11, 2019\",\n\t\tslug: \"/ubuntu-1604-install-pgadmin4\",\n\t\tcontent: () => <Post4 />\n\t},\n\t{\n\t\ttitle: \"Hosting Image menggunakan Dropbox\",\n\t\tpublishDate: \"June 9, 2018\",\n\t\tslug: \"/hosting-image-menggunakan-dropbox\",\n\t\tcontent: () => <Post3 />\n\t},\n\t{\n\t\ttitle: \"Github Pages, hosting static website tanpa biaya tanpa ribet\",\n\t\tpublishDate: \"June 9, 2018\",\n\t\tslug: \"/github-pages-hosting-static-website-tanpa-biaya-tanpa-ribet\",\n\t\tcontent: () => <Post2 />\n\t},\n\t{\n\t\ttitle: \"Git Clone Laravel Project\",\n\t\tpublishDate: \"June 1, 2018\",\n\t\tslug: \"/git-clone-laravel-project\",\n\t\tcontent: () => <Post1 />\n\t}\n];\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link } from \"react-router-dom\";\n\nclass ListBlog extends React.Component {\n    render() {\n        return (\n            <List>\n                <ListItem>\n                    <ListItemText\n                        style={{ marginLeft: 15 }}\n                        primary=\n                        {<Link to={this.props.slug}> {this.props.title} </Link>}\n                        secondary={this.props.publish} />\n                </ListItem>\n            </List>\n        );\n    }\n}\n\nexport default ListBlog;","import React from \"react\";\nimport slugify from \"slugify\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { TextField, Typography, Button } from \"@material-ui/core\";\n\nclass SlugGenerator extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsentence: \"\",\n\t\t\tslug: \"\"\n\t\t};\n\t\tthis.handleChangeInput = this.handleChangeInput.bind(this);\n\t\tthis.handleGenerateSlug = this.handleGenerateSlug.bind(this);\n\t\tthis.handleKeyPress = this.handleKeyPress.bind(this);\n\t}\n\n\thandleChangeInput = event => {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t});\n\t};\n\n\thandleGenerateSlug = () => {\n\t\tthis.setState({\n\t\t\tslug: slugify(this.state.sentence, { lower: true })\n\t\t});\n\t};\n\n\thandleKeyPress = event => {\n\t\tif (event.keyCode === 13) {\n\t\t\tif (event.target.id === \"sentence\") this.handleGenerateSlug();\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { classes } = this.props,\n\t\t\tnpmSlug = (\n\t\t\t\t<a\n\t\t\t\t\thref=\"https://www.npmjs.com/package/slugify\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\tSlugify\n\t\t\t\t</a>\n\t\t\t);\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Typography variant=\"h6\">Slug Generator</Typography>\n\t\t\t\t<Typography variant=\"caption\">Powered by {npmSlug}</Typography>\n\t\t\t\t<div>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"sentence\"\n\t\t\t\t\t\tname=\"sentence\"\n\t\t\t\t\t\tlabel=\"Sentence\"\n\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\tvalue={this.state.sentence}\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tonChange={this.handleChangeInput}\n\t\t\t\t\t\tonKeyDown={this.handleKeyPress}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tonClick={this.handleGenerateSlug}\n\t\t\t\t\t\tstyle={{ marginTop: 30 }}\n\t\t\t\t\t>\n\t\t\t\t\t\tGenerate\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t\t\t{this.state.slug}\n\t\t\t\t\t</Typography>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst styles = theme => ({\n\troot: theme.mixins.gutters({\n\t\tpaddingTop: 16,\n\t\tpaddingBottom: 16,\n\t\tmarginTop: theme.spacing(3)\n\t}),\n\tbutton: {\n\t\tmargin: theme.spacing(1)\n\t}\n});\n\nexport default withStyles(styles)(SlugGenerator);\n","import React from \"react\";\nimport SlugGenerator from \"../components/SlugGenerator\";\n\nclass Sidebar extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<SlugGenerator />\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport { Grid, Container } from \"@material-ui/core\";\nimport Header from \"../components/Header\";\nimport Main from \"../components/Main\";\nimport ListBlog from \"../containers/ListBlog\";\nimport Sidebar from \"../containers/Sidebar\";\nimport { Posts } from \"../util/Posts\";\n\nconst Home = () => {\n\treturn (\n\t\t<Container maxWidth=\"lg\">\n\t\t\t<Header />\n\t\t\t<Main>\n\t\t\t\t<Grid container>\n\t\t\t\t\t<Grid item xs={12} md={8}>\n\t\t\t\t\t\t{Posts.map(function(value) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ListBlog\n\t\t\t\t\t\t\t\t\ttitle={value.title}\n\t\t\t\t\t\t\t\t\tpublish={value.publishDate}\n\t\t\t\t\t\t\t\t\tslug={value.slug}\n\t\t\t\t\t\t\t\t\tkey={value.slug}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} md={4}>\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Main>\n\t\t</Container>\n\t);\n};\n\nexport default Home;\n","import React from 'react';\n\nclass NotFound extends React.Component {\n    render() {\n        return (\n            <div style={{marginLeft: 20}}>\n                <p>404 not found</p>\n            </div>\n        )\n    }\n}\n\nexport default NotFound;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Post from \"./pages/Post\";\nimport { Posts } from \"./util/Posts\";\n\n//import pages\nimport Home from \"./pages/Home\";\nimport NotFound from \"./pages/NotFound\";\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<HashRouter basename={process.env.PUBLIC_URL}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path={\"/\"} component={Home} />\n\t\t\t\t\t<Route path={\"/home\"} component={Home} />\n\n\t\t\t\t\t{Posts.map(post => {\n\t\t\t\t\t\tconst { content: Content } = post;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath={post.slug}\n\t\t\t\t\t\t\t\trender={() => (\n\t\t\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\t\t\ttitle={post.title}\n\t\t\t\t\t\t\t\t\t\tpublishDate={post.publishDate}\n\t\t\t\t\t\t\t\t\t\tcontent={<Content />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tkey={post.slug}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t</Switch>\n\t\t\t</HashRouter>\n\t\t);\n\t}\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}