{"version":3,"sources":["registerServiceWorker.js","containers/MessageDialog.js","components/AppBarB.js","containers/LayoutB.js","containers/PostTitle.js","containers/PostContent.js","pages/Post1.js","pages/Post2.js","pages/Post3.js","pages/Post4.js","util/Posts.js","containers/ListBlog.js","components/Timestamp.js","components/SlugGenerator.js","containers/RightSide.js","pages/Home.js","pages/NotFound.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","MessageDialog","fullScreen","this","props","react_default","a","createElement","Dialog","open","dialogMessageOpen","onClose","handleDialogMessageClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","react_social_icons","url","style","SocialIcon","DialogActions","Button","onClick","color","autoFocus","React","Component","marginRight","AppBarB","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleDialogMessageOpen","setState","bind","assertThisInitialized","classes","className","root","AppBar","position","backgroundColor","Toolbar","IconButton","menuButton","aria-label","component","Link","to","Home_default","Typography","variant","title","Mail_default","containers_MessageDialog","defaultProps","withStyles","flexGrow","marginLeft","LayoutB","components_AppBarB","content","children","theme","toolbar","mixins","padding","spacing","withTheme","PostTitle","marginBottom","align","publishDate","PostContent","paragraph","Post1","containers_LayoutB","containers_PostTitle","containers_PostContent","href","target","rel","Post2","Github","GithubPages","GithubPagesHelp","LetsEncrypt","Jekyll","ReactJS","maxWidth","src","alt","Post3","Dropbox","GoogleDrive","Post4","Posts","slug","ListBlog","List","ListItem","Avatar","ChromeReaderMode_default","ListItemText","primary","react_router_dom","secondary","publish","Timestamp","time","moment","format","timeFormat","_this2","interval","setInterval","clearInterval","Paper","elevation","gutters","paddingTop","paddingBottom","marginTop","SlugGenerator","handleChangeInput","event","defineProperty","name","value","handleGenerateSlug","sentence","lower","handleKeyPress","keyCode","npmSlug","TextField","label","textField","margin","onChange","onKeyDown","size","button","RightSide","components_Timestamp","components_SlugGenerator","Home","postList","map","containers_ListBlog","key","Grid","container","item","xs","sm","containers_RightSide","NotFound","App","listPost","react_router","path","render","basename","process","exact","ReactDOM","src_App","document","getElementById","URL","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.62353d20.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { SocialIcon } from 'react-social-icons';\n\nclass MessageDialog extends React.Component {\n    render() {\n        const { fullScreen } = this.props;\n        return (\n            <div>\n                <Dialog\n                    fullScreen={fullScreen}\n                    open={this.props.dialogMessageOpen}\n                    onClose={this.props.handleDialogMessageClose}\n                    aria-labelledby=\"responsive-dialog-title\"\n                >\n                    <DialogTitle id=\"responsive-dialog-title\">\n                        Corat Coret\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Semua tulisan yang ada di halaman ini merupakan pengalaman pribadi saya saat mondar mandir di dunia IT.\n                            Mohon maaf apabila ada kesalahan dalam penulisan maupun tutur kata.\n                            <br /><br />\n                            Apabila anda tertarik berdiskusi atau berkolaborasi dalam membuat sesuatu, anda bisa hubungi saya melalui link berikut,\n                            <br /><br />\n                            <SocialIcon url=\"mailto:khanis.anthony@gmail.com\" style={style.SocialIcon}  />\n                            <SocialIcon url=\"https://id.linkedin.com/in/khanis-anthony-kurniawan-736014160\" style={style.SocialIcon} />\n                            <SocialIcon url=\"https://github.com/khanisak\" />\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.props.handleDialogMessageClose} color=\"primary\" autoFocus>\n                            OK\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    SocialIcon: {\n        marginRight: '10px'\n    }\n}\n\nexport default MessageDialog;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MailIcon from '@material-ui/icons/Mail';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { Link } from \"react-router-dom\";\nimport MessageDialog from '../containers/MessageDialog';\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        marginLeft: 'auto',\n        marginRight: 'auto'\n    },\n    menuButton: {\n      marginLeft: -12,\n      marginRight: 20,\n    },\n};\n\nclass AppBarB extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dialogMessageOpen: false\n        }\n\n        this.handleDialogMessageClose = this.handleDialogMessageClose.bind(this);\n        this.handleDialogMessageOpen = this.handleDialogMessageOpen.bind(this);\n    }\n\n    handleDialogMessageOpen = () => {\n        this.setState({\n            dialogMessageOpen: true\n        });\n    }\n\n    handleDialogMessageClose = () => {\n        this.setState({\n            dialogMessageOpen: false\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\" style={{ backgroundColor: '#4886ff' }}>\n                    <Toolbar>\n                        <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\" component={Link} to=\"/home\" >\n                            <HomeIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n                            {this.props.title}\n                        </Typography>\n                        <IconButton color=\"inherit\" aria-label=\"Menu\" onClick={this.handleDialogMessageOpen}>\n                            <MailIcon />\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <MessageDialog dialogMessageOpen={this.state.dialogMessageOpen} handleDialogMessageClose={this.handleDialogMessageClose} />\n            </div>\n        );\n    }\n}\n\nAppBarB.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nAppBarB.defaultProps = {\n    title: 'Corat Coret'\n}\n\nexport default withStyles(styles)(AppBarB);","import React from 'react';\nimport AppBarB from '../components/AppBarB';\nimport { withStyles } from '@material-ui/core/styles';\n\nclass LayoutB extends React.Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <AppBarB />\n                <main className={classes.content}>\n                    {this.props.children}\n                </main>\n            </div>\n        );\n    }\n}\n\nconst themes = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        // backgroundColor: theme.palette.background.default,\n        padding: theme.spacing(3),\n    }\n});\n\nexport default withStyles(themes, { withTheme: true })(LayoutB);","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass PostTitle extends React.Component {\n    render() {\n        return (\n            <div style={{marginBottom: '30px'}}>\n                <Typography variant=\"h5\" align=\"center\">\n                    {this.props.title}\n                </Typography>\n                <Typography align='center' variant=\"subtitle2\">\n                    {this.props.publishDate}\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default PostTitle;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass PostContent extends React.Component {\n    render() {\n        return (\n            <Typography align='left' paragraph variant=\"body1\">\n                {this.props.children}\n            </Typography>\n        );\n    }\n}\n\nexport default PostContent;","import React from 'react';\nimport LayoutB from '../containers/LayoutB';\nimport PostTitle from '../containers/PostTitle';\nimport PostContent from '../containers/PostContent';\n\nclass Post1 extends React.Component {\n    render() {\n        return (\n            <LayoutB>\n                <PostTitle title={this.props.title} publishDate={this.props.publishDate} />\n                <PostContent>\n                    <a href=\"https://laravel.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Laravel</a> adalah sebuah\n                    <i> open source framework</i> PHP yang cukup populer untuk para\n                    developer <i>website</i>. Sedangkan <a href=\"https://git-scm.com/\">Git</a> sendiri adalah sebuah\n                    <i> platform version control system</i> yang\n                    banyak digunakan oleh developer untuk mengerjakan atau mengembangkan sebuah projek bersama-sama.\n                </PostContent>\n                <PostContent>\n                    Pada saat anda melakukan <i>Git Clone</i> pada repository yang berisi projek laravel, dan\n                    meletakkannya pada web server anda (Contoh: <i>localhost/myproject</i>,\n                    anda akan menemukan bahwa website tersebut tidak dapat dijalankan. Web server akan mengembalikan\n                    error <i>500 Internal Server Error</i>\n                </PostContent>\n                <PostContent>\n                    Berikut langkah langkah yang harus anda lakukan untuk dapat menjalankan project laravel pada\n                    saat pertama kali melakukan <i>Git Clone</i>,\n                    <ol>\n                        <li><i>Clone</i> Projek anda</li>\n                        <li>Pada OS Windows buka <i><b>cmd</b></i>, pada MacOS / Linux buka <i><b>terminal</b></i></li>\n                        <li>Pada cmd / terminal, pindah ke folder aplikasi website yang sudah di clone</li>\n                        <li>Pada cmd / terminal, jalankan perintah <i><b>\"composer install\"</b></i>. Tunggu sampai selesai.</li>\n                        <li>Copy file <b><i>.env.example</i></b> dan beri nama baru <b><i>.env</i></b> pada folder aplikasi anda</li>\n                        <li>Buka file <b><i>.env</i></b> menggunakan editor yang anda sukai, lalu ubah field <b><i>DB_DATABASE</i></b>\n                        , <b><i>DB_USERNAME</i></b> dan <b><i>DB_PASSWORD</i></b> sesuai setting database yang anda punya\n                        </li>\n                        <li>Kembali ke cmd / terminal, jalankan perintah berikut di <i>root</i> folder aplikasi website anda,\n                            <ul>\n                                <li><b><i>php artisan key:generate</i></b></li>\n                                <li><b><i>php artisan key:migrate</i></b></li>\n                            </ul>\n                        </li>\n                        <li>Jika tidak ada error, buka browser dan coba akses kembali website anda.</li>\n                    </ol>\n                </PostContent>\n            </LayoutB>\n        );\n    }\n}\n\nPost1.defaultProps = {\n    publishDate: 'default'\n}\n\nexport default Post1;","import React from 'react';\nimport LayoutB from '../containers/LayoutB';\nimport PostTitle from '../containers/PostTitle';\nimport PostContent from '../containers/PostContent';\n\nclass Post2 extends React.Component {\n    render() {\n        const Github = <a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>,\n            GithubPages = <a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Github Pages</a>,\n            GithubPagesHelp = <a href=\"https://help.github.com/articles/what-is-github-pages/\" target=\"_blank\" rel=\"noopener noreferrer\">sini</a>,\n            LetsEncrypt = <a href=\"https://letsencrypt.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Let's Encrypt</a>,\n            Jekyll = <a href=\"https://jekyllrb.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Jekyll</a>,\n            ReactJS = <a href=\"https://reactjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">ReactJS</a>;\n\n        return (\n            <LayoutB>\n                <PostTitle title={this.props.title} publishDate={this.props.publishDate} />\n                <PostContent>\n                    Github adalah\n                    salah satu dari sekian banyak layanan hosting Git untuk mengembangkan\n                    perangkat lunak bersama sama. {Github} menjadi tempat hosting favorit bagi\n                    para developer yang mengembangkan <i>code</i> berbasis <i>community / open source</i>.\n                </PostContent>\n                <PostContent>\n                    Selain sebagai tempat hosting layanan Git, terkadang profil {Github} seorang\n                    developer dapat dijadikan sebuah nilai tambah pada saat melamar pekerjaan.\n                </PostContent>\n                <PostContent>\n                    Nah kali ini saya akan berbagi mengenai salah satu fitur {Github} yaitu {GithubPages}. {GithubPages} adalah\n                    salah satu fitur {Github} yang memperbolehkan kita untuk mem-<i>publish repository</i> kita\n                    menjadi sebuah <i>website</i>. Ya benar, Layanan hosting maksud nya teman-teman ! :) <br />\n                    Pada saat artikel ini ditulis, layanan hosting ini dapat kita nikmati secara gratis\n                    untuk <i>Public Repository</i> dan berbayar untuk <i>Private Repository</i> dan beberapa limitasi serta\n                    aturan penggunaan yang dapat dilihat di {GithubPagesHelp}.\n                </PostContent>\n                <PostContent>\n                    <i><b>Yang perlu diperhatikan</b></i> adalah {GithubPages} hanya memperbolehkan kita untuk\n                    <i> hosting <b>Static Website</b></i>. Itu berarti semua website anda yang\n                    mengandung <i>server side scripting</i> seperti <i>PHP, Java, Node.js</i> tidak dapat dijalankan di {GithubPages}.\n                    Tetapi <i>frontend framework</i> seperti <i>React.js, Angular.js</i> dapat kita hosting di {GithubPages}.\n                </PostContent>\n                <PostContent>\n                    Berikut langkah langkah yang harus anda lakukan untuk mem-<i>publish repository</i> anda,\n                    <ol>\n                        <li><i>Login</i> ke {Github}</li>\n                        <li>Buat repository sesuai keinginan anda</li>\n                        <li><i>Git Push content website</i> ke repository yang anda buat</li>\n                        <li>Masuk ke <i>repository</i> yang anda buat dan pergi ke halaman <i>setting</i> sesuai gambar di bawah <br /><br />\n                            <img style={{ maxWidth: '100%' }} src=\"https://www.dropbox.com/s/0hp2w6a12mtd5vt/Setting%20Github.png?raw=1\" alt=\"setting github\" />\n                        </li>\n                        <li>Scroll ke bawah, pada <i>section</i> Github Pages, pilih <i>source / branch</i> yang akan dijadikan content website, umumnya nama\n                        branch yang digunakan adalah <i>gh-pages branch</i>. Lihat gambar di bawah. <br /><br />\n                        <img style={{ maxWidth: '100%' }} src=\"https://www.dropbox.com/s/cz7vbap9iope1u7/Github%20Pages%20Published.png?raw=1\" alt=\"github pages published\" />\n                        </li>\n                        <li>Selesai, akses website anda dengan alamat <i>https://username.github.io/repository-name</i></li>\n                    </ol>\n                </PostContent>\n                <PostContent>\n                    Kalau anda jeli, ada pilihan <i>Custom Domain</i> pada gambar diatas. Ya, {GithubPages} memperbolehkan kita\n                    untuk menggunakan domain / subdomain kita sendiri. Cukup masukkan domain / subdomain yang ingin\n                    digunakan lalu tekan tombol <i>Save</i>. <br />\n                    Setelah itu yang harus anda lakukan adalah mengatur <i>DNS Record Domain</i> anda agar mengarah\n                    ke halaman GithubPages. Lalu akses kembali website anda dengan Custom Domain anda ! :)\n                    Oh ya, kalau sudah setting pakai custom domain, domain default dari\n                    github yang <i>https://username.github.io/repository-name</i> akan tidak bisa diakses lagi.\n                </PostContent>\n                <PostContent>\n                    Sekali lagi, kalau anda jeli. Ada pilihan <i>Enforce https</i> !\n                    Itu artinya bahwa GithubPages otomatis menyediakan sertifikat ssl untuk website anda !\n                    Menarik sekali kan? GithubPages bekerjasama dengan {LetsEncrypt} untuk menyediakan sertifikat\n                    ssl kita secara gratis guys.! <br />\n                    Ingat bahwa setelah anda melakukan setting domain, sertifikat ssl tidak serta merta akan langsung\n                    muncul pada saat anda mengakses custom domain anda. Sertifikat akan di issued dalam\n                    waktu 1x24 jam sesuai ketentuan dari {GithubPages}. <br />\n                    Pastikan bahwa saat setelah anda menyimpan custom domain anda, maka muncul notifikasi bahwa sertifikat ssl\n                    anda sedang proses issued, jika tidak, hapus custom domain anda, lalu simpan kembali custom domain anda untuk\n                    memancing proses issued https nya. <br />\n                    Karena kemarin pengalaman saya saat saya save custom domain, notifikasi nya tidak berubah menjadi issued https,\n                    sepertinya memang masih bug karena untuk sistem https di custom domain {GithubPages} sendiri baru saja\n                    diberlakukan per 1 Mei 2018.\n                </PostContent>\n                <PostContent>\n                    Satu hal terakhir yang perlu disampaikan, bahwa {GithubPages} bekerjasama juga \n                    dengan <i>framework {Jekyll}</i> untuk menyediakan platform blogging bagi penggunanya. <br />\n                    Saya sendiri belum sempat untuk utak atik {Jekyll} karena memang belum tertarik menggunakannya.\n                </PostContent>\n                <PostContent>\n                    Website ini sendiri saya hosting di {GithubPages} dan menggunakan <i>framework {ReactJS}</i>.\n                    Kenapa saya menggunakan {ReactJS}? Mungkin akan saya bahas di kesempatan selanjutnya (hehe). Terima kasih.\n                </PostContent>\n            </LayoutB>\n        );\n    }\n}\n\nPost2.defaultProps = {\n    publishDate: 'default'\n}\n\nexport default Post2;","import React from 'react';\nimport LayoutB from '../containers/LayoutB';\nimport PostTitle from '../containers/PostTitle';\nimport PostContent from '../containers/PostContent';\n\nclass Post3 extends React.Component {\n    render() {\n        const Dropbox = <a href=\"https://www.dropbox.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Dropbox</a>,\n            GoogleDrive = <a href=\"https://www.google.com/intl/in/drive/\" target=\"_blank\" rel=\"noopener noreferrer\">Google Drive</a>;\n\n        return (\n            <LayoutB>\n                <PostTitle title={this.props.title} publishDate={this.props.publishDate} />\n                <PostContent>\n                    {Dropbox} merupakan salah satu alternatif dari {GoogleDrive}. Oke, jadi sudah tau kan\n                    kira kira untuk apa {Dropbox} ini?\n                    Kita bisa <i>upload</i> sebuah gambar ke {Dropbox} lalu menggunakannya di website lain.\n                    Ikuti cara berikut,\n                    <ol>\n                        <li><i>Login</i> ke akun {Dropbox}</li>\n                        <li><i>Upload</i> sebuah gambar apa saja</li>\n                        <li>Buka gambar tersebut di {Dropbox}. Lalu klik tombol <b>\"Bagikan\"</b> yang ada di pojok kanan atas</li>\n                        <li>Setelah itu anda tinggal mengklik tombol <b>\"Buat Tautan\"</b></li>\n                        <li>Anda akan mendapatkan url dengan format kira kira sebagai berikut <i>https://www.dropbox.com/s/gv3svo2k3gvpx3x/Bagikan.png?dl=0</i></li>\n                        <li>Nah, url itu tidak bisa langsung kita gunakan, ubah parameter <b><i>dl=0</i></b> menjadi <b><i>raw=1</i></b> sehingga kira kira\n                        menjadi seperti ini https://www.dropbox.com/s/gv3svo2k3gvpx3x/Bagikan.png?raw=1</li>\n                        <li>Lalu silahkan gunakan url itu untuk menampilkan gambar seperti di bawah :) <br/><br/>\n                            <img style={{maxWidth: '100%'}} src=\"https://www.dropbox.com/s/ovvdnngyuzh96bh/Kucing%20Lucu.jpg?raw=1\" alt=\"Kucing Idaman\"/>\n                        </li>\n\n                    </ol>\n                </PostContent>\n            </LayoutB>\n        );\n    }\n}\n\nexport default Post3;","import React from 'react';\nimport LayoutB from '../containers/LayoutB';\nimport PostTitle from '../containers/PostTitle';\nimport PostContent from '../containers/PostContent';\n\nclass Post4 extends React.Component {\n    render() {\n        return (\n            <LayoutB>\n                <PostTitle title={this.props.title} publishDate={this.props.publishDate} />\n\n                <PostContent>\n                    Berikut langkah yang harus anda lakukan untuk menginstall pgAdmin4 di Ubuntu 16.04\n                    <ol>\n                        <li>Install required package dengan command berikut <i>apt-get install virtualenv python-pip libpq-dev python-dev</i></li>\n                        <li>Buat folder baru dengan command berikut <i>mkdir ~/Virtualenv</i>.</li>\n                        <li>cd ~/Virtualenv</li>\n                        <li>virtualenv pgadmin4-x.x</li>\n                        <li>cd pgadmin4-x.x</li>\n                        <li>source bin/activate</li>\n                        <li>Download pgAdmin source <b>.whl</b> di halaman berikut <a href=\"https://www.pgadmin.org/download/pgadmin-4-python-wheel/\">https://www.pgadmin.org/download/pgadmin-4-python-wheel/</a></li>\n                        <li>Masukkan file yang sudah di download tadi ke dalam folder <b>~/Virtualenv/pgadmin4-x.x</b></li>\n                        <li>Jalankan command <b>pip install \"<i>file yang sudah anda download tadi.</i>\"</b></li>\n                    </ol>\n                </PostContent>\n\n                <PostContent>\n                    Jika proses instalasi sudah selesai, pgAdmin dapat dijalankan dengan command berikut,\n                    <ol>\n                        <li>python ~/Virtualenv/pgadmin4-x.x/lib/python2.7/site-packages/pgadmin4/pgAdmin4.py</li>\n                        <li>Akses pgAdmin4 di <b>localhost:5050</b></li>\n                    </ol>\n                </PostContent>\n            </LayoutB>\n        );\n    }\n}\n\nPost4.defaultProps = {\n    publishDate: 'default'\n}\n\nexport default Post4;","import Post1 from '../pages/Post1';\nimport Post2 from '../pages/Post2';\nimport Post3 from '../pages/Post3';\nimport Post4 from '../pages/Post4';\n\nexport const Posts = [\n    {\n        title: \"Ubuntu 16.04 install pgAdmin4\",\n        publishDate: \"March 11, 2019\",\n        slug: \"/ubuntu-1604-install-pgadmin4\",\n        component: Post4\n    },\n    {\n        title: \"Hosting Image menggunakan Dropbox\",\n        publishDate: \"June 9, 2018\",\n        slug: \"/hosting-image-menggunakan-dropbox\",\n        component: Post3\n    },\n    {\n        title: \"Github Pages, hosting static website tanpa biaya tanpa ribet\",\n        publishDate: \"June 9, 2018\",\n        slug: \"/github-pages-hosting-static-website-tanpa-biaya-tanpa-ribet\",\n        component: Post2\n    },\n    { \n        title: \"Git Clone Laravel Project\", \n        publishDate: \"June 1, 2018\",\n        slug: '/git-clone-laravel-project',\n        component: Post1\n    }\n];","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport ChromeReaderMode from '@material-ui/icons/ChromeReaderMode';\nimport { Link } from \"react-router-dom\";\n\nclass ListBlog extends React.Component {\n    render() {\n        return (\n            <List>\n                <ListItem>\n                    <Avatar>\n                        <ChromeReaderMode />\n                    </Avatar>\n                    <ListItemText\n                        style={{ marginLeft: 15 }}\n                        primary=\n                        {<Link to={this.props.slug}> {this.props.title} </Link>}\n                        secondary={this.props.publish} />\n                </ListItem>\n            </List>\n        );\n    }\n}\n\nexport default ListBlog;","import React from 'react';\nimport moment from 'moment';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography, Paper } from '@material-ui/core';\n\nclass Timestamp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: moment().format(this.props.timeFormat)\n        }\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.setState({ time: moment().format(this.props.timeFormat) }))\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Paper elevation={1} className={classes.root}>\n                <Typography>\n                    Selamat Datang,\n                </Typography>\n                <Typography variant=\"subtitle2\">\n                    {this.state.time}\n                </Typography>\n                {/* <Typography variant=\"caption\">\n                    Waktu cepat berlalu, lakukan sekarang atau tidak sama sekali.\n                </Typography> */}\n            </Paper>\n        );\n    }\n}\n\nconst styles = theme => ({\n    root: theme.mixins.gutters({\n        paddingTop: 16,\n        paddingBottom: 16,\n        marginTop: theme.spacing(3),\n    }),\n});\n\nTimestamp.defaultProps = {\n    timeFormat: 'D MMMM YYYY, H:mm:ss a'\n};\n\nexport default withStyles(styles)(Timestamp);\n","import React from 'react';\nimport slug from 'slug';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Paper, TextField, Typography, Button } from '@material-ui/core';\n\nclass SlugGenerator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sentence: '',\n            slug: ''\n        }\n        this.handleChangeInput = this.handleChangeInput.bind(this);\n        this.handleGenerateSlug = this.handleGenerateSlug.bind(this);\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n    }\n\n    handleChangeInput = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    handleGenerateSlug = () => {\n        this.setState({\n            slug: slug(this.state.sentence, { lower: true })\n        });\n    }\n\n    handleKeyPress = (event) => {\n        if (event.keyCode === 13) {\n            if (event.target.id === \"sentence\")\n                this.handleGenerateSlug();\n        }\n    }\n\n    render() {\n        const { classes } = this.props,\n            npmSlug = <a href=\"https://www.npmjs.com/package/slug\" target=\"_blank\" rel=\"noopener noreferrer\">Slug</a>;\n        return (\n            <Paper elevation={1} className={classes.root}>\n                <Typography variant=\"h6\">\n                    Slug Generator\n                </Typography>\n                <Typography variant=\"caption\">\n                    Powered by {npmSlug}\n                </Typography>\n                <div>\n                    <TextField\n                        id=\"sentence\"\n                        name=\"sentence\"\n                        label=\"Sentence\"\n                        className={classes.textField}\n                        value={this.state.sentence}\n                        margin=\"normal\"\n                        onChange={this.handleChangeInput}\n                        onKeyDown={this.handleKeyPress}\n                    />\n                    <Button variant=\"contained\" size=\"small\" color=\"primary\" className={classes.button} onClick={this.handleGenerateSlug} style={{marginTop: 30}}>\n                        Generate\n                </Button>\n                    <Typography variant=\"subtitle1\">\n                        {this.state.slug}\n                    </Typography>\n                </div>\n            </Paper>\n        );\n    }\n}\n\nconst styles = theme => ({\n    root: theme.mixins.gutters({\n        paddingTop: 16,\n        paddingBottom: 16,\n        marginTop: theme.spacing(3),\n    }),\n    button: {\n        margin: theme.spacing(1),\n    },\n});\n\nexport default withStyles(styles)(SlugGenerator);","import React from 'react';\nimport Timestamp from '../components/Timestamp';\nimport SlugGenerator from '../components/SlugGenerator';\n\nclass RightSide extends React.Component {\n    render() {\n        return (\n            <div>\n                <Timestamp />\n                <SlugGenerator />\n            </div>\n        );\n    }\n}\n\nexport default RightSide;","import React from 'react';\nimport LayoutB from '../containers/LayoutB';\nimport ListBlog from '../containers/ListBlog';\nimport RightSide from '../containers/RightSide';\nimport { Posts } from '../util/Posts';\nimport Grid from '@material-ui/core/Grid';\n\n\nclass Home extends React.Component {\n    render() {\n        var postList = Posts.map(function (value) {\n            return <ListBlog title={value.title} publish={value.publishDate} slug={value.slug} key={value.slug} />\n        });\n        return (\n            <LayoutB>\n                <Grid container spacing={10}>\n                    <Grid item xs={12} sm={8} >\n                        {postList}\n                    </Grid>\n                    <Grid item xs={12} sm={4} >\n                        <RightSide />\n                    </Grid>\n                </Grid>\n            </LayoutB>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\nimport { relativeTimeRounding } from 'moment';\n\nclass NotFound extends React.Component {\n    render() {\n        return (\n            <div style={{marginLeft: 20}}>\n                <p>404 not found</p>\n            </div>\n        )\n    }\n}\n\nexport default NotFound;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter as Router, HashRouter, Route, Switch } from \"react-router-dom\";\nimport { Posts } from './util/Posts';\n\n//import pages\nimport Home from './pages/Home';\nimport NotFound from './pages/NotFound';\n\nclass App extends React.Component {\n    render() {\n        const listPost = Posts.map(function (value) {\n            return <Route path={value.slug}\n                render={() =>\n                    <value.component\n                        title={value.title}\n                        publishDate={value.publishDate}\n                    />}\n                key={value.slug} />\n        });\n        return (\n            <HashRouter basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route exact path={'/'} component={Home} />\n                    <Route path={'/home'} component={Home} />\n\n                    {listPost}\n                    <Route component={NotFound} />\n                </Switch>\n            </HashRouter>\n        );\n    }\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}